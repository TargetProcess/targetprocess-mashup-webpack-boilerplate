tau.mashups.addModule("targetprocess-mashup-webpack-boilerplate/config", {});
/*! v1.0.0 Build Tue, 12 Apr 2016 09:25:40 GMT */
!function(){var e={},r=function(){var r,n,t,a=Array.prototype.slice.call(arguments,0);"string"==typeof a[0]?(t=a[0],r=a[1],n=a[2]):Array.isArray(a[0])&&(r=a[0],n=a[1]);var o=r.reduce(function(e,r){return e.addDependency(r)},tau.mashups);return o=o.addDependency(t+"/config"),o=o.addMashup(function(){var a=Array.prototype.slice.call(arguments,0);if(r.length>0&&1===a.length)throw new Error("Can't properly load dependencies for mashup \""+t+'", mashup is stopped.');return e.variables=a[a.length-1],a.length-r.length===2?e.config=a[a.length-2]:e.config={},Object.freeze&&(Object.freeze(e.variables),Object.freeze(e.config),Object.freeze(e)),n.apply(null,a)})};r("targetprocess-mashup-webpack-boilerplate",[],function(){return function(r){function n(e){if(t[e])return t[e].exports;var a=t[e]={exports:{},id:e,loaded:!1};return r[e].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}var t={};return n.m=r,n.c=t,n.p="",n.p=e.variables?e.variables.mashupPath:n.p,n(0)}([function(e,r,n){n(1),e.exports=n(2)},function(r,n){"use strict";console.log("Mashup "+e.variables.mashupPath.split("/").slice(-2,-1).pop()+" is running!")},function(e,r){}])})}();